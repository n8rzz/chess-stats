name: build-and-deploy

on:
  push:
    branches:
      - main
      - develop
      - feature/docker-cache

env:
  # CLOUD_RUN_PROJECT_ID: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
  CLOUD_RUN_REGION: us-central1
  REPO_NAME: chess-stats

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.image-tag.outputs.image-tag }}

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # - uses: google-github-actions/setup-gcloud@v0.2.0
    #   with:
    #     project_id: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
    #     service_account_key: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}
    #     service_account_email: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT_EMAIL }}

    - id: image-tag
      uses: n8rzz/chess-stats/.github/actions/build-tag@develop

    - id: build-image
      uses: n8rzz/chess-stats/.github/actions/build-image@feature/docker-cache
      with:
        project: chess-stats-dev
        image-tag: ${{ steps.image-tag.outputs.image-tag }}
        # gcp-secret: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}
        gcp-secret: ${{ secrets.GCR_JSON_KEY }}
        # devops-credential: ${{ secrets.GOOGLE_DEVOPS_CREDENTIALS }}

    # - name: Enable the necessary APIs and enable docker auth
    #   run: |-
    #     gcloud services enable containerregistry.googleapis.com
    #     gcloud services enable run.googleapis.com
    #     gcloud --quiet auth configure-docker

    # - uses: satackey/action-docker-layer-caching@v0.0.11
    #   continue-on-error: true

    # - name: Build and Tag
    #   env:
    #     IMAGE_TAG: ${{ steps.image-tag.outputs.image-tag }}
    #   run: |-
    #     echo -e Building image with tag: "gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$IMAGE_TAG"
    #     docker build . --tag "gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$IMAGE_TAG" --tag "gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:latest"

    # - name: Push image to registry
    #   run: |-
    #     docker push gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:${{ steps.image-tag.outputs.image-tag }}

    - name: Deploy
      env:
        CLOUD_RUN_PROJECT_ID: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
        IMAGE_TAG: ${{ steps.image-tag.outputs.image-tag }}
      run: |-
        gcloud services enable containerregistry.googleapis.com
        gcloud services enable run.googleapis.com
        gcloud components install beta --quiet
        gcloud beta run deploy $CLOUD_RUN_PROJECT_ID \
          --image gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$IMAGE_TAG \
          --project $CLOUD_RUN_PROJECT_ID \
          --revision-suffix $IMAGE_TAG \
          --platform managed \
          --region $CLOUD_RUN_REGION \
          --allow-unauthenticated \
          --quiet

  # deploy:
  #   runs-on: ubuntu-latest
  #   name: Deploy to Dev
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: google-github-actions/setup-gcloud@master
  #       with:
  #         service_account_key: ${{ secrets.GOOGLE_DEVOPS_CREDENTIALS }}

  #     - uses: google-github-actions/setup-gcloud@v0.2.0
  #       with:
  #         project_id: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
  #         service_account_key: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}
  #         service_account_email: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT_EMAIL }}

  #     - uses: n8rzz/chess-stats/.github/actions/deploy-image@feature/docker-cache
  #       if: contains(github.ref, 'main')
  #       with:
  #         project: chess-stats-dev
  #         image-tag: ${{ needs.build.outputs.image-tag }}
  #         deploy-tag: next
  #         promote: true

  #     - uses: n8rzz/chess-stats/.github/actions/deploy-image@feature/docker-cache
  #       if: ${{ contains(github.ref, 'develop') || contains(github.ref, 'feature/docker-cache') }}
  #       with:
  #         project: chess-stats-dev
  #         image-tag: ${{ needs.build.outputs.image-tag }}
  #         deploy-tag: candidate
