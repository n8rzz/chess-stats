name: 'Build Image'
description: 'Build application image and push to registry'

inputs:
  project:
    description: 'Project Id'
    required: true
  image-tag:
    description: 'String that will be used as the image tag'
    required: true
  gcp-secret:
    description: 'Auth for registry'
    required: true
  # devops-credential:
  #   description: 'Base64 encoded credential for GCP'
  #   required: true

outputs:
  build-commit-sha:
    description: "Commit sha for the code used to build the image"
    value: ${{ steps.image-tag-return.outputs.build-commit-sha }}

runs:
  using: "composite"
  steps:
    - run: echo ${{ inputs.image-tag }}
      shell: bash

    # - uses: google-github-actions/setup-gcloud@master
    #   with:
    #     service_account_key: ${{ inputs.devops-credential }}

    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GCR
      uses: docker/login-action@v1
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ inputs.gcp-secret }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: |
          gcr.io/chess-stats-dev/${{ inputs.project }}:${{ inputs.image-tag }}
          gcr.io/chess-stats-dev/${{ inputs.project }}:latest
        build-args: |
          IMAGE_TAG=${{ inputs.image-tag }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
      shell: bash

    - id: image-tag-return
      run: echo "::set-output name=build-commit-sha::$GITHUB_SHA"
      shell: bash
