# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - azure-pipelines

pr: none

pool:
  vmImage: ubuntu-latest

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  ImageNameBase: 'chessstats.azurecr.io/chess-stats-dev'
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    Environment: chess-stats-prod
  ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    Environment: chess-stats-dev
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/') }}:
    BranchName: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
    BranchName: $[ replace(variables['System.PullRequest.TargetBranch'], 'refs/heads/', '') ]


steps:
  - script: echo This is the main branch
    displayName: 'Branch Name'
    condition: eq(variables.isMain, 'true')

  - task: CmdLine@2
    inputs:
      script: ' x=`echo "$(Build.SourceVersion)" | head -c 7`; echo "##vso[task.setvariable variable=ShortSha]$x"'

  - task: Docker@2
    displayName: Build an image
    inputs:
      command: build
      containerRegistry: chessstats
      repository: $(Environment)/$(BranchName)
      arguments: --build-arg APP_INSIGHTS_KEY=000000000-0000-000000 --build-arg APP_VERSION=1.0.3
      tags: |
        $(BranchName)--$(ShortSha)
        latest

  - task: Docker@2
    displayName: Push an image
    inputs:
      containerRegistry: chessstats
      repository: $(Environment)/$(BranchName)
      command: push
      tags: |
        $(BranchName)--$(ShortSha)
        latest
